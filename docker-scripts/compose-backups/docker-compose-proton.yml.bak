version: '3.7'  

  # NGINX Proxy
services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy-network
      - searxng-network
      - protonvpn-network 
    volumes:
      - ./volumes/nginx/html:/usr/share/nginx/html
      - ./volumes/nginx/conf:/etc/nginx/conf.d:rw
      - ./volumes/nginx/vhost:/etc/nginx/vhost.d:rw
      - ./volumes/nginx/certs:/etc/nginx/certs:ro
      - ./volumes/nginx/logs:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped
    environment:
      - DEFAULT_HOST=${DEFAULT_HOST}
      - VIRTUAL_HOST_RESOLVER=${VIRTUAL_HOST_RESOLVER}
      - RESOLVER=stg-r3.o.lencr.org
      - TRUST_DOWNSTREAM_PROXY=true
      - ENABLE_IPV6=false
  #     # - HSTS=off

  # ACME Companion
  acme-companion:
    image: nginxproxy/acme-companion:2.2.4
    container_name: acme-companion
    depends_on:
      - nginx-proxy
    networks:
      - proxy-network
      - protonvpn-network 
    volumes_from:
      - nginx-proxy
    volumes:
      - ./volumes/nginx/certs:/etc/nginx/certs:rw
      - ./volumes/nginx/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=noreply@rayyankhoury.com
      # - DHPARAM_GENERATION=false
    restart: unless-stopped

  searxng:
    image: searxng/searxng
    container_name: searxng
    networks:
      - searxng-network
      - protonvpn-network
    depends_on:
      - acme-companion
      - nginx-proxy
      - redis-searxng
      - protonvpn
    volumes:
      - ./volumes/searxng/data:/srv/searxng/data:rw
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${SEARXNG_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${SEARXNG_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${SEARXNG_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${SEARXNG_LETSENCRYPT_TEST}
      - VIRTUAL_PORT=${SEARXNG_VIRTUAL_PORT}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    network_mode: service:protonvpn

  redis-searxng:
    container_name: redis-searxng
    image: "redis:alpine"
    command: redis-server --save "" --appendonly "no"
    networks:
      - searxng-network
      - protonvpn-network
    tmpfs:
      - /var/lib/redis
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    restart: unless-stopped


  #ProtonVPN
  protonvpn:
    container_name: protonvpn
    environment:
      PROTONVPN_USERNAME: pmgG05fkqOgoUThk
      PROTONVPN_PASSWORD: YBLWpI4IHWr6odRDGGGjxmVudbasryGB
      PROTONVPN_SERVER: SE
      PROTONVPN_TIER: 2
    image: ghcr.io/tprasadtp/protonvpn:5.2.1
    networks:
      - proxy-network
      - protonvpn-network
      - searxng-network
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    expose:
      - 80 #SearXNG container port
      - 443 #SearXNG container port
      - 8080 #SearXNG container port
    ports:
     - "0.0.0.0:8080:8080"
    restart: unless-stopped
    depends_on:
      - nginx-proxy
      - acme-companion


networks:
  proxy-network:
  searxng-network:
    ipam:
      driver: default
  protonvpn-network:






  # Joplin DB
  # joplin-postgresdb:
  #   image: postgres:latest
  #   container_name: joplin-postgresdb
  #   networks:
  #       - joplin-network
  #   volumes:
  #       - joplin-postgresdb:/var/lib/postgresql/
  #       - /etc/localtime:/etc/localtime:ro
  #   ports:
  #       - "5421:5421"
  #   environment:
  #       - POSTGRES_USER=joplin
  #       - POSTGRES_PASSWORD=joplin
  #       - POSTGRES_DB=joplin
  #   restart: unless-stopped

  # # Joplin app
  # joplin-app:
  #   image: joplin/server:latest
  #   container_name: joplin-app
  #   networks:
  #     - joplin-network
  #   ports:
  #     - "41184:41184"
  #   depends_on:
  #     - nginx-proxy
  #     - joplin-postgresdb
  #     - acme-companion
  #   volumes:
  #     - joplin-app:/var/lib/joplin
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #       - OVERWRITEPROTOCOL=https
  #       - APP_PORT=41184
  #       - PROXY_SET_HEADER_HOST=rayyankhoury.com
  #       - APP_BASE_URL=https://joplin.rayyankhoury.com
  #       - POSTGRES_HOST=joplin-postgresdb
  #       - POSTGRES_PORT=5421
  #       - VIRTUAL_HOST=joplin.rayyankhoury.com
  #       - LETSENCRYPT_HOST=joplin.rayyankhoury.com
  #       - LETSENCRYPT_EMAIL=noreply@rayyankhoury.com
  #       - LETSENCRYPT_TEST=true
  #   restart: unless-stopped


# # Standard Notes
#   standard-notes:
#     image: standardnotes/standardnotes:latest
#     container_name: standard-notes
#     networks:
#       - standardnotes-network
#     depends_on:
#       - acme-companion
#       - nginx-proxy
#     volumes:
#       - standard-notes:/data
#     environment:
#       - OVERWRITEPROTOCOL=https
#       - VIRTUAL_HOST=notes.rayyankhoury.com
#       - LETSENCRYPT_HOST=notes.rayyankhoury.com
#       - LETSENCRYPT_EMAIL=noreply@rayyankhoury.com
#       - LETSENCRYPT_TEST=true
#     restart: unless-stopped


  # cryptpad-app:
  #   container_name: cryptpad-app
  #   image: "promasu/cryptpad:latest"
  #   networks:
  #     - cryptpad-network
  #   depends_on:
  #     - acme-companion
  #     - nginx-proxy
  #   environment:
  #     - VIRTUAL_HOST=cryptpad.rayyankhoury.com
  #     - LETSENCRYPT_HOST=cryptpad.rayyankhoury.com
  #     - LETSENCRYPT_EMAIL=noreply@rayyankhoury.com
  #     - LETSENCRYPT_TEST=true
    # hostname: cryptpad
    # volumes:
    #   - ./data/blob:/cryptpad/blob
    #   - ./data/block:/cryptpad/block
    #   - ./customize:/cryptpad/customize
    #   - ./data/data:/cryptpad/data
    #   - ./data/files:/cryptpad/datastore
    #   - ./data/config.js:/cryptpad/config/config.js
      # - NGINX_PROXY_CONTAINER=nginx-proxy
      # - CRYPTPAD_TITLE=Cryptpad
      # - CRYPTPAD_HOST=cryptpad.rayyankhoury.com
      # - CRYPTPAD_PORT=443
      # - CRYPTPAD_PROTOCOL=https



  #     - CPAD_MAIN_DOMAIN=cryptpad.rayyankhoury.com
  #     - CPAD_SANDBOX_DOMAIN=cryptpad2.rayyankhoury.com
  #   #   # Traefik can't use HTTP2 to communicate with cryptpad_websocket
  #   #   # A workaround is to disable HTTP2 in Nginx
  #   #   # - CPAD_HTTP2_DISABLE=true
  #   #   - VIRTUAL_HOST=cryptpad.rayyankhoury.com
  #   #   - LETSENCRYPT_HOST=cryptpad.rayyankhoury.com
  #   #   - LETSENCRYPT_EMAIL=noreply@rayyankhoury.com
  #   #   - LETSENCRYPT_TEST=true
  #   #   # - CPAD_TRUSTED_PROXY=10.0.0.0/8
  #   #   # - CPAD_REALIP_HEADER=X-Forwarded-For
  #   #   # - CPAD_REALIP_RECURSIVE=on
  #   expose:
  #     - "80"
  #     - "443"
  #   ports:
  #     - 3000:3000
  #     - 3001:3001
  #   # ulimits:
  #   #   nofile:
  #   #     soft: 1000000
  #   #     hard: 1000000


  
  # send-app:
  #   container_name: send-app
  #   image: "registry.gitlab.com/timvisee/send:latest"
  #   restart: always
  #   # ports:
  #   #   - '1234:1234'
  #   volumes:
  #     - /var/lib/docker/volumes/send-app/uploads:/uploads:rw
  #   networks:
  #     - send-network
  #   depends_on:
  #     - acme-companion
  #     - nginx-proxy
  #     - redis-send
  #   environment:
  #     - VIRTUAL_HOST=${SEND_VIRTUAL_HOST}
  #     - LETSENCRYPT_HOST=${SEND_LETSENCRYPT_HOST}
  #     - LETSENCRYPT_EMAIL=${SEND_LETSENCRYPT_EMAIL}
  #     - LETSENCRYPT_TEST=${SEND_LETSENCRYPT_TEST}
  #     # - VIRTUAL_PORT=1234
  #     - DHPARAM_GENERATION=${SEND_DHPARAM_GENERATION}
  #     - NODE_ENV=${SEND_NODE_ENV}
  #     - BASE_URL=${SEND_BASE_URL}
  #     # - PORT=1234
  #     - REDIS_HOST=${SEND_REDIS_HOST}

  #     # For local uploads storage
  #     - FILE_DIR=${SEND_FILE_DIR}
  #     - MAX_EXPIRE_SECONDS=31536000
  #     - DEFAULT_EXPIRE_SECONDS=86400
  #     - MAX_FILE_SIZE=10747904000
  #     # For S3 object storage (disable volume and FILE_DIR variable)
  #     # - AWS_ACCESS_KEY_ID=********
  #     # - AWS_SECRET_ACCESS_KEY=********
  #     # - S3_BUCKET=send
  #     # - S3_ENDPOINT=s3.us-west-2.amazonaws.com
  #     # - S3_USE_PATH_STYLE_ENDPOINT=true

  #     # To customize upload limits
  #     # - EXPIRE_TIMES_SECONDS=3600,86400,604800,2592000,31536000
  #     # - DEFAULT_EXPIRE_SECONDS=3600
  #     # - MAX_EXPIRE_SECONDS=31536000
  #     # - DOWNLOAD_COUNTS=1,2,5,10,15,25,50,100,1000
  #     # - MAX_DOWNLOADS=1000
  #     # - MAX_FILE_SIZE=2684354560
  #   restart: unless-stopped

  # redis-send:
  #   image: 'redis:alpine'
  #   restart: always
  #   volumes:
  #     - /var/lib/docker/volumes/send-redis:/data