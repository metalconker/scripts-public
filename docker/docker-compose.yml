version: "3.7"

services:
  # NGINX Proxy
  nginx-proxy:
    build: ./config/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:80"
    networks:
      - proxy-network
      - nextcloud-network
      - wordpress-network
      - vaultwarden-network
      - whiteboards-network
      - searxng-network
    volumes:
      - ./volumes/nginx/html:/usr/share/nginx/html
      - ./volumes/nginx/conf:/etc/nginx/conf.d:rw
      - ./volumes/nginx/vhost:/etc/nginx/vhost.d:rw
      - ./volumes/nginx/certs:/etc/nginx/certs:ro
      - ./volumes/nginx/logs:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DEFAULT_HOST=${NGINX_DEFAULT_HOST}
      - VIRTUAL_HOST_RESOLVER=${NGINX_VIRTUAL_HOST_RESOLVER}
      - RESOLVER=${NGINX_RESOLVER}
      - TRUST_DOWNSTREAM_PROXY=${NGINX_TRUST_DOWNSTREAM_PROXY}
      - ENABLE_IPV6=${NGINX_ENABLE_IPV6}
    restart: always

  # ACME Companion
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    networks:
      - proxy-network
    volumes_from:
      - nginx-proxy
    volumes:
      - ./volumes/nginx/certs:/etc/nginx/certs:rw
      - ./volumes/nginx/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=${ACME_NGINX_PROXY_CONTAINER}
      - DEFAULT_EMAIL=${ACME_DEFAULT_EMAIL}
      - DHPARAM_GENERATION=${ACME_DHPARAM_GENERATION}
    depends_on:
      - nginx-proxy
    restart: always

  # Nextcloud DB
  nextcloud-mariadb:
    image: mariadb:10.10
    container_name: nextcloud-mariadb
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXT_CLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXT_CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXT_CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXT_CLOUD_MYSQL_USER}
      - MARIADB_AUTO_UPGRADE=${NEXT_CLOUD_MARIADB_AUTO_UPGRADE}
      - MARIADB_DISABLE_UPGRADE_BACKUP=${NEXT_CLOUD_MARIADB_DISABLE_UPGRADE_BACKUP}
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    depends_on:
      - nextcloud-redis
    restart: always

  # Nextcloud Redis
  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    networks:
      - nextcloud-network
    restart: always

  # Nextcloud app
  nextcloud-app:
    image: nextcloud:26-apache
    container_name: nextcloud-app
    # ports:
    #   - 8080:80
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-app:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    environment:
      - OVERWRITEPROTOCOL=${NEXT_CLOUD_OVERWRITEPROTOCOL}
      - MYSQL_PASSWORD=${NEXT_CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXT_CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXT_CLOUD_MYSQL_USER}
      - VIRTUAL_HOST=${NEXT_CLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${NEXT_CLOUD_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${NEXT_CLOUD_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${NEXT_CLOUD_LETSENCRYPT_TEST}
      - MYSQL_HOST=${NEXT_CLOUD_MYSQL_HOST}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXT_CLOUD_NEXTCLOUD_TRUSTED_DOMAINS}
      - REDIS_HOST=${NEXT_CLOUD_REDIS_HOST}
    depends_on:
      - nextcloud-mariadb
      - nextcloud-redis
    restart: always

  # Nextcloud cron
  nextcloud-cron:
    image: nextcloud:26-apache
    entrypoint: /cron.sh
    container_name: nextcloud-cron
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-app:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - nextcloud-app
      - nextcloud-mariadb
      - nextcloud-redis
    restart: always

  # Wordpress DB
  wordpress-mariadb:
    image: mariadb:10.10
    container_name: wordpress-mariadb
    networks:
      - wordpress-network
    volumes:
      - ./volumes/wordpress-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${WORDPRESS_MYSQL_DATABASE}
      - MYSQL_USER=${WORDPRESS_MYSQL_USER}
      - MYSQL_PASSWORD=${WORDPRESS_MYSQL_PASSWORD}
    restart: always

  # Wordpress app
  wordpress-app:
    image: wordpress:latest
    container_name: wordpress-app
    networks:
      - wordpress-network
    volumes:
      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./volumes/wordpress-app:/var/www/html
    environment:
      - OVERWRITEPROTOCOL=${WORDPRESS_OVERWRITEPROTOCOL}
      - WORDPRESS_DB_HOST=${WORDPRESS_WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_WORDPRESS_DB_NAME}
      - VIRTUAL_HOST=${WORDPRESS_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${WORDPRESS_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${WORDPRESS_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${WORDPRESS_LETSENCRYPT_TEST}
    depends_on:
      - acme-companion
      - nginx-proxy
      - wordpress-mariadb
    restart: always

  # SearXNG
  searxng-app:
    build: ./config/searxng-app
    container_name: searxng-app
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - ./volumes/searxng-app/data:/srv/searxng/data:rw
      - ./volumes/searxng-app/etc/searxng:/etc/searxng
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    environment:
      - VIRTUAL_HOST=${SEARXNG_VIRTUAL_HOST}
      - SEARXNG_BASE_URL=https://${SEARXNG_VIRTUAL_HOST:-localhost}/
      - LETSENCRYPT_HOST=${SEARXNG_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${SEARXNG_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${SEARXNG_LETSENCRYPT_TEST}
      - BIND_ADDRESS=0.0.0.0:8080
      - INSTANCE_NAME=searxng-app
      - TZ=Europe/London
      - user=1000:1000
    depends_on:
      - searxng-redis
    networks:
      - searxng-network
    restart: always

  # Redis SearXNG
  searxng-redis:
    image: "redis:alpine"
    container_name: searxng-redis
    networks:
      - searxng-network
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    command: redis-server --save "" --appendonly "no"
    restart: always

  # vaultwarden app
  vaultwarden-app:
    image: vaultwarden/server:alpine
    container_name: vaultwarden-app
    environment:
      - WEBSOCKET_ENABLED=${VAULTWARDEN_WEBSOCKET_ENABLED}
      # - WEB_VAULT_ENABLED=${VAULTWARDEN_WEB_VAULT_ENABLED}
      # - SIGNUPS_ALLOWED=${VAULTWARDEN_SIGNUPS_ALLOWED}
      # - OVERWRITEPROTOCOL=${VAULTWARDEN_OVERWRITEPROTOCOL}
      - VIRTUAL_HOST=${VAULTWARDEN_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${VAULTWARDEN_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${VAULTWARDEN_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${VAULTWARDEN_LETSENCRYPT_TEST}
      # - BIND_ADDRESS=0.0.0.0:3012
      - INSTANCE_NAME=vaultwarden-app
      - TZ=Europe/London
      - user=1000:1000
    networks:
      - vaultwarden-network
    depends_on:
      - nginx-proxy
    volumes:
      - ./volumes/vaultwarden-app:/data/
    restart: always

  # whiteboards-app:
  #   build: ./config/whiteboards-app
  #   # entrypoint: sh entrypoint.sh
  #   working_dir: /home/node
  #   container_name: whiteboards-app
  #   environment:
  #     - VIRTUAL_HOST=${WHITEBOARDS_VIRTUAL_HOST}
  #     - LETSENCRYPT_HOST=${WHITEBOARDS_LETSENCRYPT_HOST}
  #     - LETSENCRYPT_EMAIL=${WHITEBOARDS_LETSENCRYPT_EMAIL}
  #     - LETSENCRYPT_TEST=${WHITEBOARDS_LETSENCRYPT_TEST}
  #   networks:
  #     - whiteboards-network
  #   # ports:
  #   #   - 3004:3004
  #   depends_on:
  #     - acme-companion
  #     - nginx-proxy
  #   volumes:
  #     - ./volumes/whiteboards-app:/home/node
  #   restart: always

# Networks
networks:
  # Rayray
  proxy-network:
  nextcloud-network:
  wordpress-network:
  vaultwarden-network:
  searxng-network:
    # ipam:
    #   driver: default
  whiteboards-network:
